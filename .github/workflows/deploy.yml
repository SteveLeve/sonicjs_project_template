name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Non-secret config variables (set in repo Variables)
      CF_ACCOUNT_ID: ${{ vars.CF_ACCOUNT_ID }}
      CF_ZONE_ID: ${{ vars.CF_ZONE_ID }}
      D1_DATABASE_ID: ${{ vars.D1_DATABASE_ID }}
      KV_NAMESPACE_ID: ${{ vars.KV_NAMESPACE_ID }}
      R2_BUCKET: ${{ vars.R2_BUCKET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Wrangler
        run: npm install -g wrangler@3

      - name: Display Config Summary
        run: |
          echo "Account: $CF_ACCOUNT_ID"
          echo "Zone: $CF_ZONE_ID"
          echo "D1 ID: $D1_DATABASE_ID"
          echo "KV ID: $KV_NAMESPACE_ID"
          echo "R2 Bucket: $R2_BUCKET"

      - name: Guard - Ensure placeholders still in repo version
        run: |
          set -e
          grep -R "{{D1_DATABASE_ID}}" apps/admin-sonicjs/wrangler.toml > /dev/null || (echo "Missing placeholder D1 in admin wrangler.toml" && exit 1)
          grep -R "{{KV_NAMESPACE_ID}}" apps/admin-sonicjs/wrangler.toml > /dev/null || (echo "Missing placeholder KV in admin wrangler.toml" && exit 1)
          grep -R "{{D1_DATABASE_ID}}" apps/web-astro/wrangler.toml > /dev/null || (echo "Missing placeholder D1 in web wrangler.toml" && exit 1)
          grep -R "{{KV_NAMESPACE_ID}}" apps/web-astro/wrangler.toml > /dev/null || (echo "Missing placeholder KV in web wrangler.toml" && exit 1)

      - name: Prepare substituted copies
        run: |
          set -e
          mkdir -p _sub
          cp apps/admin-sonicjs/wrangler.toml _sub/wrangler.admin.toml
          cp apps/web-astro/wrangler.toml _sub/wrangler.web.toml
          sed -i "s/{{D1_DATABASE_ID}}/$D1_DATABASE_ID/g" _sub/wrangler.admin.toml
          sed -i "s/{{KV_NAMESPACE_ID}}/$KV_NAMESPACE_ID/g" _sub/wrangler.admin.toml
          sed -i "s/{{D1_DATABASE_ID}}/$D1_DATABASE_ID/g" _sub/wrangler.web.toml
          sed -i "s/{{KV_NAMESPACE_ID}}/$KV_NAMESPACE_ID/g" _sub/wrangler.web.toml
          # R2 Bucket handled by name not ID; ensure present
          grep "$R2_BUCKET" _sub/wrangler.admin.toml || echo "Note: R2 bucket name not referenced explicitly in admin" 
          grep "$R2_BUCKET" _sub/wrangler.web.toml || echo "Note: R2 bucket name not referenced explicitly in web" 

      - name: Guard - Ensure no placeholders remain in substituted copies
        run: |
          set -e
          ! grep -R "{{D1_DATABASE_ID}}" _sub/wrangler.admin.toml || (echo "Substitution failed for admin D1" && exit 1)
          ! grep -R "{{KV_NAMESPACE_ID}}" _sub/wrangler.admin.toml || (echo "Substitution failed for admin KV" && exit 1)
          ! grep -R "{{D1_DATABASE_ID}}" _sub/wrangler.web.toml || (echo "Substitution failed for web D1" && exit 1)
          ! grep -R "{{KV_NAMESPACE_ID}}" _sub/wrangler.web.toml || (echo "Substitution failed for web KV" && exit 1)

      - name: Install CMS dependencies
        working-directory: apps/admin-sonicjs
        run: npm ci || npm install

      - name: Deploy CMS
        working-directory: apps/admin-sonicjs
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          cp ../../_sub/wrangler.admin.toml wrangler.sub.toml
          wrangler deploy --config wrangler.sub.toml

      - name: Build Web Frontend
        working-directory: apps/web-astro
        run: |
          npm ci || npm install
          npm run build

      - name: Deploy Web Frontend
        working-directory: apps/web-astro
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          cp ../../_sub/wrangler.web.toml wrangler.sub.toml
          wrangler deploy --config wrangler.sub.toml

      - name: Summary
        run: echo "Deployment complete. Frontend + CMS deployed with substituted bindings."
